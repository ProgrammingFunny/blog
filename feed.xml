<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>逆水行舟</title>
    <description>Michael King&#39;s Blog</description>
    <link>http://loveshisong.cn/</link>
    <atom:link href="http://loveshisong.cn/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Nov 2015 11:46:45 +0800</pubDate>
    <lastBuildDate>Fri, 13 Nov 2015 11:46:45 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Map整理</title>
        <description>&lt;p&gt;整理了下Java中Map的结构画了个图, 虚线表示接口, 实线表示类&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;map继承关系图&quot;&gt;Map继承关系图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/map.png&quot; alt=&quot;Map继承关系图&quot; title=&quot;Map结构图&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;map基本操作&quot;&gt;Map基本操作&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;int size()&lt;/code&gt;: 返回map大小&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean isEmpty()&lt;/code&gt;: 是否为空Map&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean containsKey(Object key)&lt;/code&gt;: 是否包含key&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean containsValue(Object value)&lt;/code&gt;: 是否包含value&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;V get(Object key)&lt;/code&gt;: 返回key对应的value, 没有则返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;V put(K key, V value)&lt;/code&gt;: key和value都可为null, key重复则替换旧的value&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void putAll(Map&amp;lt;? extends K, ? extends V&amp;gt; m)&lt;/code&gt;:&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;V remove(Object key)&lt;/code&gt;: 移除并返回, 若不包含key返回null&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void clear()&lt;/code&gt;: 清空map&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Set&amp;lt;K&amp;gt; keySet()&lt;/code&gt;: 返回key的集合&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Collection&amp;lt;V&amp;gt; values()&lt;/code&gt;: 返回value的集合&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Set&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; entrySet()&lt;/code&gt;: 返回Entry集合&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hashmap与hashtable&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;HashMap&lt;/code&gt;与&lt;code class=&quot;prettyprint&quot;&gt;HashTable&lt;/code&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hashtable是线程安全的，而HashMap不是线程安全的&lt;/li&gt;
&lt;li&gt;Hashtable不允许null作为key和value，而HashMap则可以使用null作为key和value&lt;/li&gt;
&lt;li&gt;Hashtable很古老, 从JDK1.0就有了, 不建议使用&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hashmap与identityhashmap&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;HashMap&lt;/code&gt;与&lt;code class=&quot;prettyprint&quot;&gt;IdentityHashMap&lt;/code&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;IdentityHashMap&lt;/code&gt;认为两个key相等: 两个key严格相等(&lt;code class=&quot;prettyprint&quot;&gt;key1 == key2&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;HashMap&lt;/code&gt;则认为两个key相等: &lt;code class=&quot;prettyprint&quot;&gt;key1.equals(key2)&lt;/code&gt;且&lt;code class=&quot;prettyprint&quot;&gt;hashCode&lt;/code&gt;相同&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;linkedhashmap&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;LinkedHashMap&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;LinkedHashMap&lt;/code&gt;可以记住key-value对的添加时的顺序&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sortedmap接口和treemap&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;SortedMap&lt;/code&gt;接口和&lt;code class=&quot;prettyprint&quot;&gt;TreeMap&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;内置比较器(&lt;code class=&quot;prettyprint&quot;&gt;Comparator&lt;/code&gt;),可比较前后顺序, &lt;code class=&quot;prettyprint&quot;&gt;TreeMap&lt;/code&gt;默认按照自然顺序排序, 不允许null作为key&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enummap&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;EnumMap&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;EnumMap&lt;/code&gt;只接受枚举类作为key, 不允许null作为key&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;properties&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;Properties&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Properties&lt;/code&gt;继承&lt;code class=&quot;prettyprint&quot;&gt;HashTable&lt;/code&gt;, 还有几个其他常用方法:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;String getProperty(String key)&lt;/code&gt;: 获取指定key对应的value值&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;String getProperty(String key, String defaultValue)&lt;/code&gt;: 有默认值&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Object setProperty(String key, String value)&lt;/code&gt;: 调用&lt;code class=&quot;prettyprint&quot;&gt;Hashtable&lt;/code&gt;的put方法.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void load(InputStream inStream)&lt;/code&gt;: 从属性文件加载key-value对&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void store(OutputStream out, String comments)&lt;/code&gt;: 将当前的所有key-value对输出到指定属性文件,小心乱码&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;loadFromXML(InputStream in)&lt;/code&gt;: 从XML中加载配置&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt;: 写到XML文件中&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;storeToXML(OutputStream os, String comment, String encoding)&lt;/code&gt;: 写到XML中, 可以指定编码&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;map的选择&quot;&gt;Map的选择&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;若要保留插入时的顺序, 可用&lt;code class=&quot;prettyprint&quot;&gt;LinkedHashMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若要求key完全匹配(同一对象)，可用&lt;code class=&quot;prettyprint&quot;&gt;IdentityHashMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若要排序,可用&lt;code class=&quot;prettyprint&quot;&gt;TreeMap&lt;/code&gt;, 它在底层采用红黑树来管理key-value对&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;关于null&quot;&gt;关于&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Hashtable&lt;/code&gt;的key、value均不能为null&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;TreeMap&lt;/code&gt;与&lt;code class=&quot;prettyprint&quot;&gt;EnumMap&lt;/code&gt;不允许key为null&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;HashMap&lt;/code&gt;、&lt;code class=&quot;prettyprint&quot;&gt;IdentityHashMap&lt;/code&gt;key可以为null, 但不建议这样做&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Map%E6%95%B4%E7%90%86.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Map%E6%95%B4%E7%90%86.html</guid>
        
        <category>Java</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>Collection的toArray方法</title>
        <description>&lt;p&gt;Java中Collection的有两个toArray方法:&lt;code class=&quot;prettyprint&quot;&gt;Object[] toArray()&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;&amp;lt;T&amp;gt; T[] toArray(T[] a)&lt;/code&gt;&lt;br&gt;
后面那个范型方法略难懂, 整理时发现些比较屌的地方,记录下来&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;&amp;lt;T&amp;gt; T[] toArray(T[] a)&lt;/code&gt;方法在抽象类&lt;code class=&quot;prettyprint&quot;&gt;AbstractCollection&lt;/code&gt;中有个实现&lt;br&gt;
该方法也是把集合转成数组, 你可以指定转成什么类型的数组,若转换的类型与集合中元素类型不一样,会抛&lt;code class=&quot;prettyprint&quot;&gt;ArrayStoreException&lt;/code&gt;.&lt;br&gt;
关于参数的写法上, 这个数组a可以是空的, 也可以不空, 会有不同的效果, 看下面代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 先创建一个集合&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 可以这么写, 长度为0, 只表示转成什么类型, 在内部还会创建一个长度为5的数组&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 也可以这么写, 长度是集合的size, 在内部会把集合里的元素放到这个传参时创建的数组&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 还可以这么写, 长度大于集合的size, 在内部会把集合里的元素放到这个传参时创建的数组, 后面多出来的3(8-5)个位置填充null&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 无论哪种方式, 如果传入的类型与即集合里元素的类型不匹配, 就会抛出ArrayStoreException&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;仔细看下JDK1.7的源码, 发现也很腹黑:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getComponentType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// 仔细想了下, 貌似这俩else分支根本不会被执行&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// 但人家可是JDK里的源码呀, 不可能出错吧!&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;arraycopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finishToArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码里注释中提的问题我想了好久, 我考虑的情况都是正常情况, 在并发环境中, 集合里的元素有可能会被其他线程remove掉,
这就造成了iterator迭代出的元素个数小于size的情况, 注释里的那俩else就会被执行到了!&lt;br&gt;
 JDK源码写的还真是考虑周到啊...&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Collection%E7%9A%84toArray%E6%96%B9%E6%B3%95.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Collection%E7%9A%84toArray%E6%96%B9%E6%B3%95.html</guid>
        
        <category>Java</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>Collection整理</title>
        <description>&lt;p&gt;Java中Collection的继承关系图, 虚线表示接口, 实线表示类&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;collection继承关系图&quot;&gt;Collection继承关系图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/collection.png&quot; alt=&quot;Collection继承关系图&quot; title=&quot;Collection结构图&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;collection基本操作&quot;&gt;Collection基本操作&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;int size()&lt;/code&gt;: 返回集合大小&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean isEmpty()&lt;/code&gt;: 是否为空&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Iterator&amp;lt;E&amp;gt; iterator()&lt;/code&gt;: 返回迭代器&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;Object[] toArray()&lt;/code&gt;: 把集合转成数组&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;&amp;lt;T&amp;gt; T[] toArray(T[] a)&lt;/code&gt;: 这个腹黑的方法详细说明看&lt;a href=&quot;/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Collection%E7%9A%84toArray%E6%96%B9%E6%B3%95.html&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean contains(Object o)&lt;/code&gt;: 是否包含该对象&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean containsAll(Collection&amp;lt;?&amp;gt; c)&lt;/code&gt;: 包含c里的全部元素则返回true&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean add(E e)&lt;/code&gt;: 添加成功改变了集合则返回true&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean addAll(Collection&amp;lt;? extends E&amp;gt; c)&lt;/code&gt;: 全部添加&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean remove(E e)&lt;/code&gt;: 移除&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean removeAll(Collection&amp;lt;?&amp;gt; c)&lt;/code&gt;: 移除与c的交集元素&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void clear()&lt;/code&gt;: 清空集合&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set接口&quot;&gt;Set接口&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Set不允许包含相同的元素, 而判断两个对象是否相同则是根据&lt;code class=&quot;prettyprint&quot;&gt;equals&lt;/code&gt;方法&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;HashSet&lt;/code&gt;不是同步的, 不能保证元素的排列顺序, 注意&lt;code class=&quot;prettyprint&quot;&gt;hashCode&lt;/code&gt;方法的实现&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;LinkedHashSet&lt;/code&gt;根据元素的&lt;code class=&quot;prettyprint&quot;&gt;hashCode&lt;/code&gt;值来决定元素的存储位置，但它同时使用链表维护元素的次序&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;TreeSet&lt;/code&gt;是&lt;code class=&quot;prettyprint&quot;&gt;SortedSet&lt;/code&gt;接口的实现类, 有顺序, 可自定义比较器(&lt;code class=&quot;prettyprint&quot;&gt;Comparator&lt;/code&gt;),有&lt;code class=&quot;prettyprint&quot;&gt;first、last、lower、higher&lt;/code&gt;等方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;list接口&quot;&gt;List接口&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;List&lt;/code&gt;是经常用到的工具, 是有序集合, 增加了与索引位置相关的操作:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E get(int index)&lt;/code&gt;: 获取指定位置的元素&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E set(int index, E element)&lt;/code&gt;: 替换指定位置的元素&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void add(int index, E element)&lt;/code&gt;: 将元素添加到指定位置&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean addAll(int index, Collection&amp;lt;? extends E&amp;gt; c)&lt;/code&gt;: 将c里的元素添加到指定位置&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E remove(int index)&lt;/code&gt;: 移除指定位置的元素&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;int indexOf(Object o)&lt;/code&gt;: o在list中第一次出现的位置&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;int lastIndexOf(Object o)&lt;/code&gt;: o在list中最后一次出现的位置&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;List&amp;lt;E&amp;gt; subList(int fromIndex, int toIndex)&lt;/code&gt;: 子list&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;arraylist和vector&quot;&gt;ArrayList和Vector&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;ArrayList&lt;/code&gt;是线程不安全的,而&lt;code class=&quot;prettyprint&quot;&gt;Vector&lt;/code&gt;是线程安全的  &lt;/p&gt;

&lt;h3 id=&quot;stack&quot;&gt;Stack&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Stack&lt;/code&gt;是&lt;code class=&quot;prettyprint&quot;&gt;Vector&lt;/code&gt;的子类,模拟数据结构中的栈,有下面几个操作:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E push(E item)&lt;/code&gt;: 压栈&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E pop()&lt;/code&gt;: 出栈&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E peek()&lt;/code&gt;: 查看栈顶元素, 不出栈&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean empty()&lt;/code&gt;: 判断栈空&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;int search(Object o)&lt;/code&gt;: 返回元素位置, 栈顶元素是1, －1表示栈里没有&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;queue接口&quot;&gt;Queue接口&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Queue&lt;/code&gt;用于模拟队列这种数据结构，实现先进先出&lt;q&gt;FIFO&lt;/q&gt;等数据结构,常用如下操作:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean add(E e)&lt;/code&gt;: 不建议使用&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean offer(E e)&lt;/code&gt;: 将指定元素插入队尾列,当使用有容量限制的队列时,此方法通常要优于&lt;code class=&quot;prettyprint&quot;&gt;add(E)&lt;/code&gt;,
后者可能无法插入元素，而只是抛出一个异常。&lt;strong&gt;推荐使用此方法取代add&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean remove()&lt;/code&gt;: 不建议使用&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean poll()&lt;/code&gt;: 获取头部元素并且删除元素，队列为空返回null;&lt;strong&gt;推荐使用此方法取代remove&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean element()&lt;/code&gt;: 返回队首元素, 队空抛&lt;code class=&quot;prettyprint&quot;&gt;NoSuchElementException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean peek()&lt;/code&gt;: 返回队首元素, 队空返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;priorityqueue类&quot;&gt;PriorityQueue类&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;PriorityQueue&lt;/code&gt;类中元素的顺序不是按照加入的顺序排列的, 而是按队列元素的优先级重新排序,
调用&lt;code class=&quot;prettyprint&quot;&gt;peek()&lt;/code&gt;或者是&lt;code class=&quot;prettyprint&quot;&gt;poll()&lt;/code&gt;方法时，返回的是队列中优先级最小的元素, 可以自定义排序.&lt;/p&gt;

&lt;h3 id=&quot;deque接口与arraydeque类&quot;&gt;Deque接口与ArrayDeque类&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Deque&lt;/code&gt;代表一个双端队列，可以当作一个双端队列使用，也可以当作“栈”来使用，因为它包含出栈&lt;code class=&quot;prettyprint&quot;&gt;pop()&lt;/code&gt;与入栈&lt;code class=&quot;prettyprint&quot;&gt;push()&lt;/code&gt;方法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void addFirst(E e)&lt;/code&gt;: 元素增加至队头, 超容量抛异常&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void addLast(E e)&lt;/code&gt;: 元素增加至队尾, 超容量抛异常&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean offerFirst(E e)&lt;/code&gt;: 元素增加至队头, 比add安全&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;boolean offerLast(E e)&lt;/code&gt;: 元素增加至队尾, 比add安全&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E removeFirst()&lt;/code&gt;: 获取并删除队头元素, 队空抛&lt;code class=&quot;prettyprint&quot;&gt;NoSuchElementException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E removeLast()&lt;/code&gt;: 获取并删除队尾元素, 队空抛&lt;code class=&quot;prettyprint&quot;&gt;NoSuchElementException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E pollFirst()&lt;/code&gt;: 获取并删除队头元素, 队空返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E pollLast()&lt;/code&gt;: 获取并删除队尾元素, 队空返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E getFirst()&lt;/code&gt;: 获取队头元素, 但不删除, 队空抛&lt;code class=&quot;prettyprint&quot;&gt;NoSuchElementException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E getLast()&lt;/code&gt;: 获取队头元素, 但不删除, 队空抛&lt;code class=&quot;prettyprint&quot;&gt;NoSuchElementException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E peekFirst()&lt;/code&gt;: 获取队头元素, 但不删除, 队空返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E peekLast()&lt;/code&gt;: 获取队头元素, 但不删除, 队空返回&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;void push(E e)&lt;/code&gt;: 元素增加至队头, 类似&lt;code class=&quot;prettyprint&quot;&gt;offerFirst&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;E pop()&lt;/code&gt;: 元素增加至队头, 类似&lt;code class=&quot;prettyprint&quot;&gt;pollFirst&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;linkedlist&quot;&gt;LinkedList&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;LinkedList&lt;/code&gt;类同时实现了&lt;code class=&quot;prettyprint&quot;&gt;List&lt;/code&gt;接口和&lt;code class=&quot;prettyprint&quot;&gt;Deque&lt;/code&gt;接口, 因此它也可以当做一个双端队列来用, 也可以当作“栈”来使用.&lt;br&gt;
它基于链表实现, 随机访问性能较差, 但插入与删除操作性能很好&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Collection%E6%95%B4%E7%90%86.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-12-Collection%E6%95%B4%E7%90%86.html</guid>
        
        <category>Java</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>Guava之Preconditions</title>
        <description>&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Preconditions&lt;/code&gt;用于各种条件检查, 在Guava的&lt;code class=&quot;prettyprint&quot;&gt;com.google.common.base&lt;/code&gt;包中&lt;br&gt;
它提供了几个静态方法, 不满足条件时会抛出异常&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checknotnull&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkNotNull&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static &amp;lt;T&amp;gt; T checkNotNull(T reference)&lt;/code&gt;&lt;br&gt;
函数功能: 检查参数不为空, 否则抛出&lt;code class=&quot;prettyprint&quot;&gt;NullPointerException&lt;/code&gt;&lt;br&gt;
应用场景: 判断对象不为null&lt;br&gt;
有三个重载函数&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;checkNotNull(T reference)&lt;/li&gt;
&lt;li&gt;checkNotNull(T reference, Object errorMessage)&lt;/li&gt;
&lt;li&gt;checkNotNull(T reference, String errorMessageTemplate, Object... errorMessageArgs)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第二个可自定义错误描述，第三个可以使用模板,如&lt;code class=&quot;prettyprint&quot;&gt;(&amp;quot;Age is %s&amp;quot;, 18)&lt;/code&gt;等&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checkargument&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkArgument&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static void checkArgument(boolean expression)&lt;/code&gt;&lt;br&gt;
函数功能: 检查参数表达式是否为true, 为false时抛出&lt;code class=&quot;prettyprint&quot;&gt;IllegalArgumentException&lt;/code&gt;&lt;br&gt;
应用场景: 判断表达式真假, 如&lt;code class=&quot;prettyprint&quot;&gt;age &amp;gt; 18&lt;/code&gt;&lt;br&gt;
同样有三个重载函数&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checkstate&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkState&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static void checkState(boolean expression)&lt;/code&gt;&lt;br&gt;
函数功能: 检查参数不为空, 否则抛出&lt;code class=&quot;prettyprint&quot;&gt;IllegalStateException&lt;/code&gt;&lt;br&gt;
应用场景: 判断表达式真假, 常用于不依赖参数的判断, 如&lt;code class=&quot;prettyprint&quot;&gt;Iterator.next()&lt;/code&gt;&lt;br&gt;
同样有三个重载函数&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checkelementindex&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkElementIndex&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static int checkElementIndex(int index, int size)&lt;/code&gt;&lt;br&gt;
函数功能: 检查index范围属于[0, size), 否则抛出&lt;code class=&quot;prettyprint&quot;&gt;IndexOutOfBoundsException&lt;/code&gt;&lt;br&gt;
应用场景: 一个List只传入&lt;code class=&quot;prettyprint&quot;&gt;list.size()&lt;/code&gt;和要判断的下标即可&lt;br&gt;
有两个重载函数:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;checkElementIndex(int index, int size)&lt;/li&gt;
&lt;li&gt;checkElementIndex(int index, int size, String desc)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第二个可以自己写描述, 如传入的是(5, 3, &lt;q&gt;index&lt;/q&gt;)描述将是&lt;q&gt;index (4) must not be greater than size (3)&lt;/q&gt;&lt;br&gt;
第一个默认是&lt;q&gt;index&lt;/q&gt;的描述&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checkpositionindex&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkPositionIndex&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static int checkPositionIndex(int index, int size)&lt;/code&gt;&lt;br&gt;
函数功能: 检查index范围属于[0, size], 否则抛出&lt;code class=&quot;prettyprint&quot;&gt;IndexOutOfBoundsException&lt;/code&gt;&lt;br&gt;
应用场景: 我还在想&lt;br&gt;
也有有两个重载函数同上&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checkpositionindexes&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;checkPositionIndexes&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;函数声明: &lt;code class=&quot;prettyprint&quot;&gt;public static void checkPositionIndexes(int start, int end, int size)&lt;/code&gt;&lt;br&gt;
函数功能: 检查 start和end属于[0, size]且start&amp;lt;=end, 否则抛出&lt;code class=&quot;prettyprint&quot;&gt;IndexOutOfBoundsException&lt;/code&gt;  &lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 11 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-11-Guava%E4%B9%8BPreconditions.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-11-Guava%E4%B9%8BPreconditions.html</guid>
        
        <category>Guava</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>Guava之Optional</title>
        <description>&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Optional&lt;/code&gt;用于处理有可能为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;的情况,在Guava的&lt;code class=&quot;prettyprint&quot;&gt;com.google.common.base&lt;/code&gt;包中&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;Optional&lt;/code&gt;是一个抽象类，有两个&lt;code class=&quot;prettyprint&quot;&gt;final&lt;/code&gt;的子类:&lt;code class=&quot;prettyprint&quot;&gt;Present&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;Absent&lt;/code&gt;&lt;br&gt;
使用的时候直接用&lt;code class=&quot;prettyprint&quot;&gt;Optional&lt;/code&gt;即可, 不用关心&lt;code class=&quot;prettyprint&quot;&gt;Present&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;Absent&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;静态方法&quot;&gt;静态方法&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Optional&lt;/code&gt;有三个常用的静态方法:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Optional.of(T reference): 返回的是一个&lt;code class=&quot;prettyprint&quot;&gt;Present&lt;/code&gt;对象, 表示不能为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;, 当&lt;code class=&quot;prettyprint&quot;&gt;reference&lt;/code&gt;为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;时直接抛&lt;code class=&quot;prettyprint&quot;&gt;NullPointerException&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Optional.absent(): 返回的是一个&lt;code class=&quot;prettyprint&quot;&gt;final&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;Absent&lt;/code&gt;对象, 表示&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional.fromNullable(T nullableReference): 返回的可能是&lt;code class=&quot;prettyprint&quot;&gt;Present&lt;/code&gt;或者&lt;code class=&quot;prettyprint&quot;&gt;Absent&lt;/code&gt;, 表示对象肯能为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;, 即参数为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;时等同于&lt;code class=&quot;prettyprint&quot;&gt;absent()&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2 id=&quot;实例方法&quot;&gt;实例方法&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;boolean isPresent( ): Optional包含的T实例不为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;，则返回true&lt;/li&gt;
&lt;li&gt;T get( ): 返回包含实例, 若包含的实例为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;则抛出&lt;code class=&quot;prettyprint&quot;&gt;IllegalStateException&lt;/code&gt;异常&lt;/li&gt;
&lt;li&gt;T or(T defaultValue): &lt;code class=&quot;prettyprint&quot;&gt;a.or(b)&lt;/code&gt;a不为null返回a, 否则返回b, b为&lt;code class=&quot;prettyprint&quot;&gt;null&lt;/code&gt;时抛出&lt;code class=&quot;prettyprint&quot;&gt;NullPointerException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;T orNull( ): &lt;code class=&quot;prettyprint&quot;&gt;a.orNull()&lt;/code&gt;a不为null返回a, 否则返回null, 逆操作是&lt;code class=&quot;prettyprint&quot;&gt;fromNullable()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 11 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-11-Guava%E4%B9%8BOptional.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-11-Guava%E4%B9%8BOptional.html</guid>
        
        <category>Guava</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>Guava之Objects</title>
        <description>&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;Objects&lt;/code&gt;在Guava的&lt;code class=&quot;prettyprint&quot;&gt;com.google.common.base&lt;/code&gt;包中&lt;br&gt;
JDK7已经把Objects收录在了&lt;code class=&quot;prettyprint&quot;&gt;java.util.Objects&lt;/code&gt;里, 现在可以直接用啦&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;equals&quot;&gt;equals&lt;/h2&gt;

&lt;p&gt;看实现代码， 不用担心空指针了&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;hashcode和hash&quot;&gt;hashCode和hash&lt;/h2&gt;

&lt;p&gt;首先&lt;code class=&quot;prettyprint&quot;&gt;hashCode(Object o)&lt;/code&gt;不用担心空指针&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外还有个&lt;code class=&quot;prettyprint&quot;&gt;hash(Object... values)&lt;/code&gt;方法非常好用，可以传多个对象进去得到hash值, 比如可以这样用:&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;Objects.hashCode(field1, field2, ..., fieldn)&lt;/code&gt;&lt;br&gt;
来个例子:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4066&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4096&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;tostring&quot;&gt;toString&lt;/h2&gt;

&lt;p&gt;有两个方法&lt;code class=&quot;prettyprint&quot;&gt;toString(Object o)&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;toString(Object o, String nullDefault)&lt;/code&gt;, 代码如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 如果传null则返回字符串&amp;quot;null&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 这个可以自己指定为null时返回什么&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;requirenonnull&quot;&gt;requireNonNull&lt;/h2&gt;

&lt;p&gt;还有两个判空方法&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 直接抛空指针异常&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;requireNonNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 可以自定义异常描述&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;requireNonNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
</description>
        <pubDate>Tue, 10 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-10-Guava%E4%B9%8BObjects.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-11-10-Guava%E4%B9%8BObjects.html</guid>
        
        <category>Guava</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>正则表达式</title>
        <description>&lt;p&gt;正则表达式收集整理&lt;/p&gt;

&lt;hr&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: left&quot;&gt;字符&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;\&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;转义符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;\n&lt;/code&gt;匹配换行符。&lt;code class=&quot;prettyprint&quot;&gt;\\&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;\&lt;/code&gt;，&lt;code class=&quot;prettyprint&quot;&gt;\(&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;(&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配输入字符串开始的位置&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配输入字符串结尾的位置&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;零次或多次匹配前面的字符或子表达式&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;zo*&lt;/code&gt; 匹配&lt;code class=&quot;prettyprint&quot;&gt;z&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;zoo&lt;/code&gt;; &lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;*&lt;/code&gt; 等效于 &lt;code class=&quot;prettyprint&quot;&gt;{0,}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;一次或多次匹配前面的字符或子表达式&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;zo+&lt;/code&gt; 匹配&lt;code class=&quot;prettyprint&quot;&gt;zo&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;zoo&lt;/code&gt;,但与&lt;code class=&quot;prettyprint&quot;&gt;z&lt;/code&gt;不匹配; &lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;+&lt;/code&gt; 等效于 &lt;code class=&quot;prettyprint&quot;&gt;{1,}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;零次或一次匹配前面的字符或子表达式&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;do(es)?&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;do&lt;/code&gt;或&lt;code class=&quot;prettyprint&quot;&gt;does&lt;/code&gt;; &lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;?&lt;/code&gt; 等效于 &lt;code class=&quot;prettyprint&quot;&gt;{0,1}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;{n}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;n 是非负整数, 正好匹配 n 次&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;o{2}&lt;/code&gt;与&lt;code class=&quot;prettyprint&quot;&gt;Bob&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;不匹配，但与&lt;code class=&quot;prettyprint&quot;&gt;food&lt;/code&gt;中的两个&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;{n,}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;至少匹配 n 次&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;o{2,}&lt;/code&gt;不匹配&lt;code class=&quot;prettyprint&quot;&gt;Bob&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;, 但匹配&lt;code class=&quot;prettyprint&quot;&gt;foooood&lt;/code&gt;中的所有&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;; &lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;o{1,}&lt;/code&gt;等效于&lt;code class=&quot;prettyprint&quot;&gt;o+&lt;/code&gt;; &lt;code class=&quot;prettyprint&quot;&gt;o{0,}&lt;/code&gt;等效于&lt;code class=&quot;prettyprint&quot;&gt;o*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;{n,m}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;n &amp;lt;= m, 匹配至少 n 次，至多 m 次&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;o{1,3}&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;fooooood&lt;/code&gt;中的头三个 &lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;; &lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;o{0,1}&lt;/code&gt; 等效于 &lt;code class=&quot;prettyprint&quot;&gt;o?&lt;/code&gt;; &lt;br&gt;注意:不能将空格插入逗号和数字之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;非贪心匹配, 匹配尽可能短的字符串;&lt;br&gt;常跟在&lt;code class=&quot;prettyprint&quot;&gt;*、+、?、{n}、{n,}、{n,m}&lt;/code&gt;等之后&lt;br&gt;默认是“贪心的”, 匹配可能长的字符串&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;在字符串&lt;code class=&quot;prettyprint&quot;&gt;oooo&lt;/code&gt;中，&lt;code class=&quot;prettyprint&quot;&gt;o+?&lt;/code&gt;只匹配单个&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;,而&lt;code class=&quot;prettyprint&quot;&gt;o+&lt;/code&gt;匹配所有&lt;code class=&quot;prettyprint&quot;&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配除&lt;q&gt;\n&lt;/q&gt;之外的任何单个字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;若要匹配包括&lt;q&gt;\n&lt;/q&gt;在内的任意字符，请使用&lt;code class=&quot;prettyprint&quot;&gt;[\s\S]&lt;/code&gt;之类的模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;(pattern)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;pattern&lt;/code&gt;并捕获该匹配的子表达式 &lt;br&gt;可以使用 &lt;code class=&quot;prettyprint&quot;&gt;$0&lt;/code&gt;…&lt;code class=&quot;prettyprint&quot;&gt;$9&lt;/code&gt; 获取匹配结果&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;若要匹配括号字符 &lt;code class=&quot;prettyprint&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;prettyprint&quot;&gt;)&lt;/code&gt;, 请使用&lt;code class=&quot;prettyprint&quot;&gt;\(&lt;/code&gt;&lt;code class=&quot;prettyprint&quot;&gt;\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;x｜y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配 &lt;code class=&quot;prettyprint&quot;&gt;x&lt;/code&gt; 或 &lt;code class=&quot;prettyprint&quot;&gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;z｜food&lt;/code&gt; 匹配&lt;code class=&quot;prettyprint&quot;&gt;z&lt;/code&gt;或&lt;code class=&quot;prettyprint&quot;&gt;food&lt;/code&gt;。&lt;code class=&quot;prettyprint&quot;&gt;(z｜f)ood&lt;/code&gt; 匹配&lt;code class=&quot;prettyprint&quot;&gt;zood&lt;/code&gt;或&lt;code class=&quot;prettyprint&quot;&gt;food&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[xyz]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;字符集. 匹配包含的任一字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[abc]&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;plain&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[^xyz]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;反向字符集. 匹配未包含的任何单个字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[^abc]&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;plain&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[a-z]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;字符范围. 匹配指定范围内的任何字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[a-z]&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;a&lt;/code&gt;到&lt;code class=&quot;prettyprint&quot;&gt;z&lt;/code&gt;范围内的任何小写字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[^a-z]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;反向字符范围. 匹配不在指定范围内的任何字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[^a-z]&lt;/code&gt;匹配不在&lt;code class=&quot;prettyprint&quot;&gt;a&lt;/code&gt;到&lt;code class=&quot;prettyprint&quot;&gt;z&lt;/code&gt;范围内的任何字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\b]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配一个字边界, 即字与空格间的位置&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;er\b&lt;/code&gt;匹配&lt;code class=&quot;prettyprint&quot;&gt;never&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;er&lt;/code&gt;, 但不匹配&lt;code class=&quot;prettyprint&quot;&gt;verb&lt;/code&gt;中的&lt;code class=&quot;prettyprint&quot;&gt;er&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\B]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配非字边界&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\d]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;数字字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[0-9]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\D]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;非数字字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[^0-9]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\f]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;换页符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;\x0c&lt;/code&gt; 和 &lt;code class=&quot;prettyprint&quot;&gt;\cL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\n]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;换行符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;\x0a&lt;/code&gt; 和 &lt;code class=&quot;prettyprint&quot;&gt;\cJ&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\r]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;回车符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;\x0d&lt;/code&gt; 和 &lt;code class=&quot;prettyprint&quot;&gt;\cM&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\s]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配任何空白字符,包括空格、制表符、换页符等&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[ \f\n\r\t\v]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\S]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;非空白字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[^ \f\n\r\t\v]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\t]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;制表符(TAB)&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;\x09&lt;/code&gt; 和 &lt;code class=&quot;prettyprint&quot;&gt;\cI&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\v]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;垂直制表符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;\x09&lt;/code&gt; 和 &lt;code class=&quot;prettyprint&quot;&gt;\cI&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\w]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;普通字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[A-Za-z0-9_]&lt;/code&gt;(注意有个&lt;code class=&quot;prettyprint&quot;&gt;_&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\W]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;非普通字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;等效于 &lt;code class=&quot;prettyprint&quot;&gt;[^A-Za-z0-9_]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\cx]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配 &lt;code class=&quot;prettyprint&quot;&gt;x&lt;/code&gt; 表示的控制字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;\cM&lt;/code&gt; 匹配 &lt;code class=&quot;prettyprint&quot;&gt;Control-M&lt;/code&gt; 或&lt;code class=&quot;prettyprint&quot;&gt;回车符&lt;/code&gt;&lt;br&gt;&lt;code class=&quot;prettyprint&quot;&gt;x&lt;/code&gt; 的值必须在 &lt;code class=&quot;prettyprint&quot;&gt;A-Z&lt;/code&gt; 或 &lt;code class=&quot;prettyprint&quot;&gt;a-z&lt;/code&gt; 之间, 否则认为 &lt;code class=&quot;prettyprint&quot;&gt;c&lt;/code&gt; 就是&lt;code class=&quot;prettyprint&quot;&gt;c&lt;/code&gt;字符本身&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\xn]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配 &lt;code class=&quot;prettyprint&quot;&gt;n&lt;/code&gt;,此处的 n 是一个十六进制转义码 &lt;br&gt;十六进制转义码必须正好是两位数长&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;\x41&lt;/code&gt;匹配字母&lt;code class=&quot;prettyprint&quot;&gt;A&lt;/code&gt;, &lt;code class=&quot;prettyprint&quot;&gt;\x041&lt;/code&gt;与&lt;code class=&quot;prettyprint&quot;&gt;\x04&lt;/code&gt;&amp;amp;&lt;code class=&quot;prettyprint&quot;&gt;1&lt;/code&gt;等效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;[\un]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;匹配 &lt;code class=&quot;prettyprint&quot;&gt;n&lt;/code&gt;,此处的 n 以四位十六进制数表示的 Unicode 字符&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;\u00A9&lt;/code&gt;匹配版权符号 (©)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;
</description>
        <pubDate>Sat, 24 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E5%BF%AB%E6%8D%B7%E9%80%9F%E6%9F%A5/2015-10-24-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E5%BF%AB%E6%8D%B7%E9%80%9F%E6%9F%A5/2015-10-24-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</guid>
        
        <category>正则表达式</category>
        
        
        <category>快捷速查</category>
        
      </item>
    
      <item>
        <title>CSS选择器</title>
        <description>&lt;p&gt;CSS 选择器用法收集整理, 参考&lt;a href=&quot;http://www.w3.org/TR/css3-selectors/#selectors&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;常见的选择器&quot;&gt;常见的选择器&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于所有元素, 少用, 很慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;.X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;class选择器, &lt;code class=&quot;prettyprint&quot;&gt;class=&amp;quot;X&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;#X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;id选择器, &lt;code class=&quot;prettyprint&quot;&gt;id=&amp;quot;X&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标签选择器, 用语渲染html标签&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xy&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;XY&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;组合选择器, 会有下面这几种:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;X.Y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;class=&amp;quot;Y&amp;quot;&lt;/code&gt;的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;X#Y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;id=&amp;quot;Y&amp;quot;&lt;/code&gt;的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;#X.Y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;id=&amp;quot;X&amp;quot; class=&amp;quot;Y&amp;quot;&lt;/code&gt;的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;.X#Y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;prettyprint&quot;&gt;class=&amp;quot;X&amp;quot; id=&amp;quot;Y&amp;quot;&lt;/code&gt;的元素, 跟上面一样&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&quot;x,-y,-z&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X, Y, Z&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;批量选择器, 即多个选择器用 &lt;code class=&quot;prettyprint&quot;&gt;,&lt;/code&gt; 隔开，中间有无空格都可以，表示适用于每个被隔开的选择器&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;x-y&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X Y&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;后代选择器(中间用空格隔开), 选取 &lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt; 元素内的所有 &lt;code class=&quot;prettyprint&quot;&gt;Y&lt;/code&gt; 元素  &lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;x-&amp;gt;-y&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X &amp;gt; Y&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;子元素选择器(直接后代选择器), 选取 &lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt; 元素内的所有 &lt;strong&gt;直接出现&lt;/strong&gt; 的&lt;code class=&quot;prettyprint&quot;&gt;Y&lt;/code&gt; 元素
相当于所有第一代子元素，而第二代子元素不会选中&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;x-+-y&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X + Y&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;临近选择器, 选取&lt;strong&gt;紧邻&lt;/strong&gt;着 &lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt; 元素后面出现的&lt;strong&gt;第一个&lt;/strong&gt; &lt;code class=&quot;prettyprint&quot;&gt;Y&lt;/code&gt; 元素&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;Y&lt;/code&gt;必须是同级且中间不隔着其他元素，否则不会选中&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;x-~-y&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X ~ Y&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;也是临近选择器, 选取 &lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt; 元素后面出现的&lt;strong&gt;所有与&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;同级&lt;/strong&gt;的 &lt;code class=&quot;prettyprint&quot;&gt;Y&lt;/code&gt; 元素  &lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;属性选择器&quot;&gt;属性选择器&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: left&quot;&gt;选择器&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;选取具有属性&lt;code class=&quot;prettyprint&quot;&gt;foo&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo=&amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;选取具有属性&lt;code class=&quot;prettyprint&quot;&gt;foo&lt;/code&gt;且属性值为&lt;code class=&quot;prettyprint&quot;&gt;bar&lt;/code&gt;的&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo*=&amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素的&amp;#39;foo&amp;#39;属性值中包含子串&amp;#39;bar&amp;#39;即可&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo^=&amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素的&amp;#39;foo&amp;#39;属性值必须以&lt;code class=&quot;prettyprint&quot;&gt;bar&lt;/code&gt;开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo$=&amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素的&amp;#39;foo&amp;#39;属性值必须以&lt;code class=&quot;prettyprint&quot;&gt;bar&lt;/code&gt;结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X[foo~=&amp;quot;bar&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素的有个&amp;#39;foo&amp;#39;属性, 属性值是空白隔开的值列表, 值列表中有一个是&lt;code class=&quot;prettyprint&quot;&gt;bar&lt;/code&gt;即可&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&quot;伪类选择器&quot;&gt;伪类选择器&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: left&quot;&gt;选择器&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;示例&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:link&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;a:link&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;未点击过的链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:visited&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;a:visited&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;已访问过的链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:active&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;button:active&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;获取到用户焦点时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:hover&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;div:hover&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;鼠标移到元素上面时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:checked&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;input[type=radio]:checked&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;被选中的元素单选框、复选框等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:not(Y)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;div:not(#container)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;除 &lt;code class=&quot;prettyprint&quot;&gt;#contaienr&lt;/code&gt; 外的所有 &lt;code class=&quot;prettyprint&quot;&gt;div&lt;/code&gt; 元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&quot;结构伪类选择器&quot;&gt;结构伪类选择器&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: left&quot;&gt;选择器&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:nth-child(n)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素且是父元素的第n个子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:nth-last-child(n)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素且是父元素的倒数第n个子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:nth-of-type(n)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;第n个兄弟&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:nth-last-of-type(n)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;倒数第n个兄弟&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:first-child&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素且是父元素的第1个子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:last-child&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素且是父元素的倒数第1个子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:first-of-type&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;兄弟元素中的第1个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:last-of-type&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;兄弟元素中的倒数第1个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:only-child&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素且是父元素的唯一一个子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X:only-of-type&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;兄弟元素中的唯一一个(即同级别中就一个&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;最常用的方式是这样的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;tbody&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 奇数行 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;tbody&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 偶数行 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;伪元素选择器&quot;&gt;伪元素选择器&lt;/h2&gt;

&lt;p&gt;只对块级元素生效  &lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: left&quot;&gt;选择器&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;示例&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X::first-line&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;p::first-line&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;第一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X::first-letter&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;p::first-letter&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;第一个字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X::before&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;在&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素之前声称某些内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;prettyprint&quot;&gt;X::after&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;在&lt;code class=&quot;prettyprint&quot;&gt;X&lt;/code&gt;元素之后声称某些内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 22 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-10-22-CSS%E9%80%89%E6%8B%A9%E5%99%A8.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-10-22-CSS%E9%80%89%E6%8B%A9%E5%99%A8.html</guid>
        
        <category>CSS</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>HttpServletRequest的请求路径</title>
        <description>&lt;p&gt;&lt;code class=&quot;prettyprint&quot;&gt;HttpServletRequest&lt;/code&gt;中方法&lt;code class=&quot;prettyprint&quot;&gt;getRequestURI&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;getRequestURI&lt;/code&gt;等的区别&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;项目在tomcat中的目录结构是这样子的: &lt;code class=&quot;prettyprint&quot;&gt;webapps/testApp/项目内容&lt;/code&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;webapps&lt;/code&gt;为tomcat容器的目录&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;testApp&lt;/code&gt;即为项目部署的名称&lt;br&gt;
项目的代码片段是这样子的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/testController&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/testAPI.htm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Maps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newHashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getContextPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContextPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getServletPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getRequestURL&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getRequestURI&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getQueryString&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQueryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ModelAndView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MappingJackson2JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请求的URL为: &lt;code class=&quot;prettyprint&quot;&gt;http://localhost:8080/testApp/testController/testAPI.htm?a=1&amp;amp;b=2&lt;/code&gt;&lt;br&gt;
得到的结果是:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;getContextPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/testApp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;getServletPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/testController/testAPI.htm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;getRequestURL&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:8080/testApp/testController/testAPI.htm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;getRequestURI&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/testApp/testController/testAPI.htm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;getQueryString&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a=1&amp;amp;b=2&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量名称&lt;/th&gt;
&lt;th&gt;变量值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ContextPath&lt;/td&gt;
&lt;td&gt;项目部署路径，没有名称(如直接部署在在ROOT里)则为空串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ServletPath&lt;/td&gt;
&lt;td&gt;请求地址(不包括项目名称)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RequestURL&lt;/td&gt;
&lt;td&gt;整个URL(不包括查询参数)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RequestURI&lt;/td&gt;
&lt;td&gt;请求地址(包括项目名称)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QueryString&lt;/td&gt;
&lt;td&gt;?后面的那一堆查询串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-10-20-javaWeb%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%840.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/2015-10-20-javaWeb%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%840.html</guid>
        
        <category>Java</category>
        
        
        <category>编程技术</category>
        
      </item>
    
      <item>
        <title>五险一金详解</title>
        <description>&lt;p&gt;有人说五险一金交很多钱，还不如自己拿去理财，刚开始不了解，也无从判断对错，不过现在我想说，五险一金实在是国家的大好福利。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;五险一金&quot;&gt;五险一金&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;不同地方缴费比例不同&lt;/strong&gt;，以北京为例:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;养老保险&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;22%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;8%&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;医疗保险&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;10%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;2% + 3元&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;失业保险&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;1%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;0.2%&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;工伤保险&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;0.3%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;0%&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;生育保险&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;0.8%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;0%&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;prettyprint&quot;&gt;住房公积金&lt;/code&gt;:单位缴纳 &lt;code class=&quot;prettyprint&quot;&gt;12%&lt;/code&gt;，个人缴纳 &lt;code class=&quot;prettyprint&quot;&gt;12%&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;睁大眼睛看，单位总共缴纳社保基数的 &lt;code class=&quot;prettyprint&quot;&gt;44.1%&lt;/code&gt;, 个人总共交&lt;code class=&quot;prettyprint&quot;&gt;工资的22.2% + 3元&lt;/code&gt;。&lt;br&gt;
比如你在北京上班，工资&lt;code class=&quot;prettyprint&quot;&gt;10000元/月&lt;/code&gt;，那么公司除了发你10000工资外，还需给你交&lt;code class=&quot;prettyprint&quot;&gt;4410块&lt;/code&gt;的五险一金；&lt;br&gt;
你自己的这10000元，其中有&lt;code class=&quot;prettyprint&quot;&gt;2220+3=2223&lt;/code&gt;元用来交五险一金，剩下的钱才用于计算缴多少税，交完税才是自己拿到手的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;三险一金&lt;/code&gt;、&lt;code class=&quot;prettyprint&quot;&gt;四金&lt;/code&gt;等是指&lt;code class=&quot;prettyprint&quot;&gt;五险一金&lt;/code&gt;中由个人缴纳的部分(养老保险金、医疗保险金、失业保险金、住房公积金)。&lt;br&gt;
一般我们说“交四金”、“交五险一金”，都是指同一个意思。即用人单位为劳动者缴纳五险一金（用人单位另外支出），其中有四项劳动者也要缴纳（劳动者税前工资中扣除）。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;社保基数&quot;&gt;社保基数&lt;/h2&gt;

&lt;p&gt;五险一金中的缴费基数是由社保基数(社会保险缴纳基数)决定的。&lt;br&gt;
这个社保缴费基数一般是由人力资源和社会保障局，根据上一年的平均工资计算出来的一系列的规则。&lt;br&gt;
如&lt;a href=&quot;http://www.bjrbj.gov.cn/&quot;&gt;北京市人力资源和社会保障局&lt;/a&gt;2015年公布的&lt;a href=&quot;http://www.bjrbj.gov.cn/xxgk/gsgg/201507/t20150702_50932.html&quot;&gt;京社保发〔2015〕23号&lt;/a&gt;。
多嘴一句，2014年北京市月平均工资为6463!&lt;/p&gt;

&lt;p&gt;社保基数保证了下面几点:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最低缴费基数(一般是平均工资的60%)不能低于多少，工资少于最低标准的也按照最低标准缴费，如最低缴费基数为1500，但你的工资为1000，缴费基数应为1500；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;最高缴费基数(一般是平均工资的300%)不会高于多少，如最高缴费基数为3万，你的月工资是5万，缴费基数应为3万；&lt;/li&gt;
&lt;li&gt;在一定区间内(一般是平均工资的60%～300%)，按照实际工资作为缴费基数,也就是说，大部分人应该以实际工资作为社保缴费基数。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;养老保险&quot;&gt;养老保险&lt;/h2&gt;

&lt;p&gt;1998年1月1日实行统一基本养老保险制度以后参加工作且缴费年限满15年的人员，
退休后基本养老金(退休金)由基础养老金(单位缴纳部分算出来的)和个人帐户(个人缴纳部分)养老金两部分组成。即: &lt;code class=&quot;prettyprint&quot;&gt;基本养老金&lt;/code&gt; = &lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt; + &lt;code class=&quot;prettyprint&quot;&gt;个人帐户养老金&lt;/code&gt;&lt;br&gt;
如果没满15年，那等退休的时候国家会把个人交的8%全部退还，公司交的22%全部归到国家的养老统筹基金里了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;养老金怎么算？多交少交一样吗？&lt;/strong&gt;&lt;br&gt;
肯定不一样啊，而且交的越多拿的越多。&lt;br&gt;
前面已知，每个月拿的养老金由两部分组成：&lt;code class=&quot;prettyprint&quot;&gt;基本养老金&lt;/code&gt; = &lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt; + &lt;code class=&quot;prettyprint&quot;&gt;个人帐户养老金&lt;/code&gt;，其中：&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;个人帐户养老金&lt;/code&gt; = &lt;code class=&quot;prettyprint&quot;&gt;退休时个人帐户储蓄额&lt;/code&gt; / &lt;code class=&quot;prettyprint&quot;&gt;记发月数&lt;/code&gt;, 相当于之前自己交的钱按月做了平均。&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt; = (&lt;code class=&quot;prettyprint&quot;&gt;上年度在岗职工月平均工资&lt;/code&gt; + &lt;code class=&quot;prettyprint&quot;&gt;本人指数化月平均缴费工资&lt;/code&gt;) / &lt;code class=&quot;prettyprint&quot;&gt;2&lt;/code&gt; * &lt;code class=&quot;prettyprint&quot;&gt;缴费年限&lt;/code&gt; * &lt;code class=&quot;prettyprint&quot;&gt;1%&lt;/code&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;本人指数化月平均缴费工资&lt;/code&gt; = &lt;code class=&quot;prettyprint&quot;&gt;上年度在岗职工月平均工资&lt;/code&gt; * &lt;code class=&quot;prettyprint&quot;&gt;本人平均缴费指数&lt;/code&gt;&lt;br&gt;
因此&lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt;可&lt;strong&gt;简化&lt;/strong&gt;为:&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt; = &lt;code class=&quot;prettyprint&quot;&gt;上年度在岗职工月平均工资&lt;/code&gt;(1 + &lt;code class=&quot;prettyprint&quot;&gt;本人平均缴费指数&lt;/code&gt;) / &lt;code class=&quot;prettyprint&quot;&gt;2&lt;/code&gt; * &lt;code class=&quot;prettyprint&quot;&gt;缴费年限&lt;/code&gt; * &lt;code class=&quot;prettyprint&quot;&gt;1%&lt;/code&gt;&lt;br&gt;
这个&lt;code class=&quot;prettyprint&quot;&gt;上年度在岗职工月平均工资&lt;/code&gt;是某地区计算出来的平均工资，这个值在同一地区是一样的，不同省市可能不同，
因此决定&lt;code class=&quot;prettyprint&quot;&gt;基础养老金&lt;/code&gt;多少的关键因素就是&lt;code class=&quot;prettyprint&quot;&gt;缴费年限&lt;/code&gt;和&lt;code class=&quot;prettyprint&quot;&gt;本人平均缴费指数&lt;/code&gt;&lt;br&gt;
&lt;code class=&quot;prettyprint&quot;&gt;本人平均缴费指数&lt;/code&gt;就是自己实际的缴费基数与社会平均工资之比的历年平均值。下限为0.6，上限为3。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这意味着什么？&lt;/strong&gt;&lt;br&gt;
这意味着缴费基数越高，缴费的年限越长，养老金就会越高。
养老金的领取是无限期规定的，只要领取人活着，就可以享受按月领取养老金的待遇，即使个人帐户养老金已经用完，仍然会继续按照原标准计发，
况且，个人养老金还要逐年根据社会在岗职工的月平均工资的增加而增长。因此，活得越久，就可以领取得越多，相对于交费来说，肯定更加划算。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;另外值得注意的是&lt;/strong&gt;，不管在哪里交社保，退休都要回户口所在地享受当地的退休待遇，不同地区具体的政策可能不同，
先是缴费比例不同，再是不同地区平均工资不同。可能还会有些别的什么政策，具体要单算了。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;医疗保险&quot;&gt;医疗保险&lt;/h2&gt;

&lt;p&gt;医疗保险一般男交满25年，女交满20年退休后就可享受终生医疗保险(具体还要看地方政策)。&lt;br&gt;
医疗保险也分两部分，一部分是统筹基金，一部分是个人帐户，个人帐户一般有个存折，可以把里面的钱取出来。&lt;br&gt;
&lt;strong&gt;基本医疗保险基金个人帐户金额的组成:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;个人缴纳的基本医疗保险基金（基数×2％）全额划入个人帐户;&lt;/li&gt;
&lt;li&gt;单位缴纳的基本医疗保险基金（基数×10％）按比例划入个人帐户&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也就是个人账户里的钱:
&lt;code class=&quot;prettyprint&quot;&gt;在职个人帐户&lt;/code&gt; ＝ &lt;code class=&quot;prettyprint&quot;&gt;基数 * 2% + 基数 * (0.8% ~ 4.8%)&lt;/code&gt;&lt;br&gt;
单位按比例划入部分:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参保年龄&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;划入比例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;35周岁以下&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;0.8％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35周岁（含）以上45周岁以下&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;1％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45周岁（含）以上&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;2％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;退休人员70周岁以下&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;4.3％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;退休人员70周岁(含)以上&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;4.8％&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;关于医保报销，只有三甲医院或者定点医院才能报销，而且甲类药物乙类药物的报销比例也不一样，还有医保起报价格等，情况略复杂，不多说了。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;失业保险&quot;&gt;失业保险&lt;/h2&gt;

&lt;p&gt;交满一年才能享受，一般交1年拿2个月，交2年拿4个月，但一辈子最多拿24个月。&lt;br&gt;
被公司辞退或者合同到期了不想续约的，都可以享受到。公司不给办的话，一告一个准。&lt;br&gt;
自己主动辞职的，就算交了10年也不能享受失业保险。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;工伤保险&quot;&gt;工伤保险&lt;/h2&gt;

&lt;p&gt;个人不用缴，单位缴纳。&lt;br&gt;
一般用的比较少，在工作时，或者上下班的路上出什么事的时候就能用上了。&lt;br&gt;
比如下班时被车撞了应该赶快报警，让警察来调查记录并拍照采集证据，警察处理完以后会给你开个事故什么鉴定书之类的东西，你就可以拿这个去单位要求报工伤了。&lt;br&gt;
如果你出了事让人跑了而且还不找证人还不报警什么的，那没证据的情况下一般不会被采纳为工伤的。&lt;br&gt;
工伤还有个时效问题，出了事必须马上报告单位，把警察出具的证据和事故鉴定书以及你出工伤以后去看病或住院的病历交给单位，
叫单位拿着这些材料去做工伤鉴定，你的单位必须在一个月内把你的有效材料送到工伤鉴定中心，如果距离你出工伤的日子超过了一个月就不行了。
如果你单位不去给你鉴定，那你自己可以拿着材料去鉴定中心鉴定，最好也不要超过一个月(一半个人申报时效为1年)，否则会很麻烦很麻烦。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;生育保险&quot;&gt;生育保险&lt;/h2&gt;

&lt;p&gt;生育保险起码要交一年才能享受。&lt;br&gt;
如果你是女性，那么生完孩子出院后要赶快把结婚证(未婚生子的报销不了)+独生子女证(一般来说生2胎的报销不了)+病历+
大小检查和住院和手术费用的所有发票+住院清单+出院小结这些所有的材料交到公司，一般来说，公司在医保规定范围内基本上可以全部报销，
还有缴费基数 * 4个月的补贴，这是医保中心特别为报销的女生补贴的,只有女生报销才能拿的到(四个月工资好嘛，相当多了)。
如果你是男性，你老婆没工作或者没上生育险，那么你可以报销生育险了。只是你拿不到缴费基数 * 4的四个月工资补贴。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;住房公积金&quot;&gt;住房公积金&lt;/h2&gt;

&lt;p&gt;这绝对是个好东西呀。自己交一半，公司交一半。&lt;br&gt;
公积金可以买房子，还房贷，装修什么的也可以用。即使一辈子没用上，退休的时候也可以取出来。&lt;br&gt;
另外公积金贷款比商业贷款利息低的多的。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Fri, 16 Oct 2015 00:00:00 +0800</pubDate>
        <link>http://loveshisong.cn/%E6%B1%82%E7%9F%A5%E6%84%9F%E6%82%9F/2015-10-16-%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91.html</link>
        <guid isPermaLink="true">http://loveshisong.cn/%E6%B1%82%E7%9F%A5%E6%84%9F%E6%82%9F/2015-10-16-%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91.html</guid>
        
        <category>五险一金</category>
        
        
        <category>求知感悟</category>
        
      </item>
    
  </channel>
</rss>
